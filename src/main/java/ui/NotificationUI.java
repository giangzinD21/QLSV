package ui;

import model.Notification;
import dao.NotificationDAO;

import java.util.ArrayList;
import java.util.Scanner;

public class NotificationUI {
    private static final Scanner scanner = new Scanner(System.in);
    private static final NotificationDAO dao = new NotificationDAO();

    public static void run(int currentUserId, String currentRole) {
        while (true) {
            System.out.println("\n--- Qu·∫£n l√Ω Th√¥ng b√°o ---");
            System.out.println("1. Th√™m th√¥ng b√°o");
            System.out.println("2. C·∫≠p nh·∫≠t th√¥ng b√°o");
            System.out.println("3. X√≥a th√¥ng b√°o");
            System.out.println("4. Xem t·∫•t c·∫£ th√¥ng b√°o");
            System.out.println("0. Quay l·∫°i");
            System.out.print("Ch·ªçn: ");
            try {
                int choice = Integer.parseInt(scanner.nextLine());
                switch (choice) {
                    case 1 -> addNotification(currentUserId, currentRole);
                    case 2 -> updateNotification();
                    case 3 -> deleteNotification();
                    case 4 -> showAllNotifications();
                    case 0 -> { return; }
                    default -> System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
                }
            } catch (NumberFormatException e) {
                System.out.println("‚ùå Vui l√≤ng nh·∫≠p s·ªë.");
            }
        }
    }

    private static void addNotification(int senderId, String senderRole) {
        while (true) {
            try {
                System.out.print("Nh·∫≠p n·ªôi dung th√¥ng b√°o: ");
                String msg = scanner.nextLine().trim();
                validateMessage(msg);

                Notification noti = new Notification(senderId, senderRole, msg);
                dao.add(noti);
                System.out.println("‚úÖ ƒê√£ g·ª≠i th√¥ng b√°o.");
                break;
            } catch (IllegalArgumentException e) {
                System.out.println("‚ùå " + e.getMessage());
            }
        }
    }

    private static void updateNotification() {
        while (true) {
            try {
                System.out.print("Nh·∫≠p ID th√¥ng b√°o c·∫ßn s·ª≠a: ");
                String idStr = scanner.nextLine().trim();
                int id = validateNotificationId(idStr);

                System.out.print("Nh·∫≠p n·ªôi dung m·ªõi: ");
                String msg = scanner.nextLine().trim();
                validateMessage(msg);

                Notification updated = new Notification(id);
                updated.setMessage(msg);
                dao.update(updated);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t th√¥ng b√°o.");
                break;
            } catch (IllegalArgumentException e) {
                System.out.println("‚ùå " + e.getMessage());
            }
        }
    }

    private static void deleteNotification() {
        while (true) {
            try {
                System.out.print("Nh·∫≠p ID th√¥ng b√°o c·∫ßn x√≥a: ");
                String idStr = scanner.nextLine().trim();
                int id = validateNotificationId(idStr);

                Notification toDelete = new Notification(id);
                dao.delete(toDelete);
                break;
            } catch (IllegalArgumentException e) {
                System.out.println("‚ùå " + e.getMessage());
            }
        }
    }

    private static void showAllNotifications() {
        ArrayList<Notification> list = dao.selectAll();
        if (list.isEmpty()) {
            System.out.println("üì≠ Kh√¥ng c√≥ th√¥ng b√°o n√†o.");
        } else {
            System.out.println("üì¢ Danh s√°ch th√¥ng b√°o:");
            for (Notification n : list) {
                System.out.println("ID: " + n.getId() + " | [" + n.getCreatedAt() + "] " +
                        n.getSenderRole().toUpperCase() + " (ID: " + n.getSenderId() + "): " +
                        n.getMessage());
            }
        }
    }

    /// Exception
    private static void validateMessage(String msg) {
        if (msg.isEmpty()) {
            throw new IllegalArgumentException("N·ªôi dung th√¥ng b√°o kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
        }
    }

    private static int validateNotificationId(String input) {
        if (input.isEmpty()) throw new IllegalArgumentException("ID kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
        try {
            int id = Integer.parseInt(input);
            if (id < 0) throw new IllegalArgumentException("ID kh√¥ng ƒë∆∞·ª£c √¢m.");
            return id;
        } catch (NumberFormatException e) {
            throw new IllegalArgumentException("ID ph·∫£i l√† s·ªë nguy√™n h·ª£p l·ªá.");
        }
    }
}